From 0f546c24989a7fee9746e2df7df32a7181cfc74c Mon Sep 17 00:00:00 2001
From: Ben Horgan <ben.horgan@arm.com>
Date: Tue, 25 Jul 2023 12:21:16 +0100
Subject: [PATCH] DVFS: Enable the use of the genpd framework to set
 performance state

Needed for total compute to enable GPU DVFS. On total compute the OPPs
are discovered and the OPP set via the SCP using the SCMI performance
protocol.

Signed-off-by: Ben Horgan <ben.horgan@arm.com>
---
 .../arm/midgard/backend/gpu/mali_kbase_devfreq.c  | 15 ++++++++-------
 1 file changed, 8 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c b/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c
index a389cd9..7a2bfa5 100644
--- a/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c
+++ b/drivers/gpu/arm/midgard/backend/gpu/mali_kbase_devfreq.c
@@ -31,6 +31,7 @@
 #endif
 
 #include <linux/version.h>
+#include <linux/pm_domain.h>
 #include <linux/pm_opp.h>
 #include "mali_kbase_devfreq.h"
 
@@ -121,6 +122,7 @@ kbase_devfreq_target(struct device *dev, unsigned long *target_freq, u32 flags)
 #endif
 	unsigned long volts[BASE_MAX_NR_CLOCKS_REGULATORS] = {0};
 	unsigned int i;
+	int err;
 	u64 core_mask;
 
 	nominal_freq = *target_freq;
@@ -170,8 +172,6 @@ kbase_devfreq_target(struct device *dev, unsigned long *target_freq, u32 flags)
 		if (kbdev->regulators[i] &&
 				kbdev->current_voltages[i] != volts[i] &&
 				kbdev->current_freqs[i] < freqs[i]) {
-			int err;
-
 			err = regulator_set_voltage(kbdev->regulators[i],
 				volts[i], volts[i]);
 			if (!err) {
@@ -187,8 +187,6 @@ kbase_devfreq_target(struct device *dev, unsigned long *target_freq, u32 flags)
 
 	for (i = 0; i < kbdev->nr_clocks; i++) {
 		if (kbdev->clocks[i]) {
-			int err;
-
 			err = clk_set_rate(kbdev->clocks[i], freqs[i]);
 			if (!err) {
 #if IS_ENABLED(CONFIG_REGULATOR)
@@ -202,7 +200,12 @@ kbase_devfreq_target(struct device *dev, unsigned long *target_freq, u32 flags)
 			}
 		}
 	}
-
+	err = dev_pm_genpd_set_performance_state(kbdev->dev, nominal_freq);
+	if (err) {
+		dev_err(dev, "Failed to set opp (%d) (target %lu)\n",
+                        err, *target_freq);
+		return err;
+	}
 	kbase_devfreq_set_core_mask(kbdev, core_mask);
 
 #if IS_ENABLED(CONFIG_REGULATOR)
@@ -210,8 +213,6 @@ kbase_devfreq_target(struct device *dev, unsigned long *target_freq, u32 flags)
 		if (kbdev->regulators[i] &&
 				kbdev->current_voltages[i] != volts[i] &&
 				original_freqs[i] > freqs[i]) {
-			int err;
-
 			err = regulator_set_voltage(kbdev->regulators[i],
 				volts[i], volts[i]);
 			if (!err) {
-- 
2.25.1

