From 98b9a3533861b5a0aa07e159e19555dfb48b3fd3 Mon Sep 17 00:00:00 2001
From: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date: Wed, 23 Feb 2022 19:50:23 +0000
Subject: [PATCH 86/97] KVM: arm64: SMMUv3: Pin all host memory

Ensure all host pages are useable for DMA by requesting pinning. If a
SMMU or a CPU does not support FEAT_BBM level 1 or greater, then we need
to map the whole host memory with leaf page table entries because we
cannot switch a live block to table and vice versa without first
disabling them.

Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
---
 arch/arm64/kvm/hyp/nvhe/iommu/arm-smmu-v3.c | 13 ++++++++++++-
 include/kvm/arm_smmu_v3.h                   |  1 +
 include/linux/arm_smmu_v3_regs.h            |  1 +
 3 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/arch/arm64/kvm/hyp/nvhe/iommu/arm-smmu-v3.c b/arch/arm64/kvm/hyp/nvhe/iommu/arm-smmu-v3.c
index 686f36f84bec..13f471516368 100644
--- a/arch/arm64/kvm/hyp/nvhe/iommu/arm-smmu-v3.c
+++ b/arch/arm64/kvm/hyp/nvhe/iommu/arm-smmu-v3.c
@@ -279,6 +279,9 @@ static int smmu_init_registers(struct hyp_arm_smmu_v3_device *smmu)
 	if (val ^ readl_relaxed(smmu->base + ARM_SMMU_GERRORN))
 		writel_relaxed(val, smmu->base + ARM_SMMU_GERRORN);
 
+	val = readl_relaxed(smmu->base + ARM_SMMU_IDR3);
+	smmu->bbml = FIELD_GET(IDR3_BBML, val);
+
 	return 0;
 }
 
@@ -492,6 +495,7 @@ static int smmu_init_device(struct hyp_arm_smmu_v3_device *smmu)
 static int smmu_init(void)
 {
 	int ret;
+	bool skip_bbm = true;
 	struct hyp_arm_smmu_v3_device *smmu;
 
 	hyp_spin_lock_init(&smmu_lock);
@@ -507,9 +511,16 @@ static int smmu_init(void)
 		ret = smmu_init_device(smmu);
 		if (ret)
 			return ret;
+
+		skip_bbm &= !!smmu->bbml;
 	}
 
-	return 0;
+	/*
+	 * The host doesn't tell us which memory is going to be used for DMA, so
+	 * we have to assume the worst and pin everything. And if FEAT_BBM is
+	 * not supported by a CPU or a SMMU, we can't use block mappings.
+	 */
+	return kvm_host_enable_stage2_pinned(skip_bbm);
 }
 
 static int smmu_dev_set_owner(u64 smmu_base, u32 sid)
diff --git a/include/kvm/arm_smmu_v3.h b/include/kvm/arm_smmu_v3.h
index f05ed653a318..a27b9c5e972c 100644
--- a/include/kvm/arm_smmu_v3.h
+++ b/include/kvm/arm_smmu_v3.h
@@ -17,6 +17,7 @@ struct hyp_arm_smmu_v3_device {
 	size_t			strtab_num_entries;
 	size_t			strtab_num_l1_entries;
 	u8			strtab_split;
+	u8			bbml;
 	u32			cmdq_prod;
 	u64			*cmdq_base;
 	size_t			cmdq_log2size;
diff --git a/include/linux/arm_smmu_v3_regs.h b/include/linux/arm_smmu_v3_regs.h
index 2d7369112ce4..19a55385b2ac 100644
--- a/include/linux/arm_smmu_v3_regs.h
+++ b/include/linux/arm_smmu_v3_regs.h
@@ -42,6 +42,7 @@
 
 #define ARM_SMMU_IDR3			0xc
 #define IDR3_RIL			(1 << 10)
+#define IDR3_BBML			GENMASK(12, 11)
 
 #define ARM_SMMU_IDR5			0x14
 #define IDR5_STALL_MAX			GENMASK(31, 16)
-- 
2.34.1

