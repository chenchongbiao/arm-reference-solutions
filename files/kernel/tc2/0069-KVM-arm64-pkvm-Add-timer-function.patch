From 6e572fc4c791e3d1463a3be134d4f0849b7d88c9 Mon Sep 17 00:00:00 2001
From: Jean-Philippe Brucker <jean-philippe@linaro.org>
Date: Tue, 15 Feb 2022 19:08:14 +0000
Subject: [PATCH 69/97] KVM: arm64: pkvm: Add timer function

Add a delay loop for drivers. This needs more work.

Signed-off-by: Jean-Philippe Brucker <jean-philippe@linaro.org>
---
 arch/arm64/include/asm/kvm_pkvm.h  |  5 +++++
 arch/arm64/kvm/hyp/nvhe/setup.c    |  4 ++++
 arch/arm64/kvm/hyp/nvhe/timer-sr.c | 30 ++++++++++++++++++++++++++++++
 3 files changed, 39 insertions(+)

diff --git a/arch/arm64/include/asm/kvm_pkvm.h b/arch/arm64/include/asm/kvm_pkvm.h
index b9c0cd4c91c4..8bc1f383d412 100644
--- a/arch/arm64/include/asm/kvm_pkvm.h
+++ b/arch/arm64/include/asm/kvm_pkvm.h
@@ -330,6 +330,11 @@ static inline unsigned long host_s2_pgtable_pages(void)
 	return res;
 }
 
+#ifdef __KVM_NVHE_HYPERVISOR__
+int pkvm_timer_init(void);
+void pkvm_udelay(unsigned long usecs);
+#endif /* __KVM_NVHE_HYPERVISOR__ */
+
 #define KVM_FFA_MBOX_NR_PAGES	1
 
 /*
diff --git a/arch/arm64/kvm/hyp/nvhe/setup.c b/arch/arm64/kvm/hyp/nvhe/setup.c
index 7faaed59d80d..c74c5bf21d77 100644
--- a/arch/arm64/kvm/hyp/nvhe/setup.c
+++ b/arch/arm64/kvm/hyp/nvhe/setup.c
@@ -306,6 +306,10 @@ void __noreturn __pkvm_init_finalise(void)
 	};
 	pkvm_pgtable.mm_ops = &pkvm_pgtable_mm_ops;
 
+	ret = pkvm_timer_init();
+	if (ret)
+		goto out;
+
 	if (kvm_iommu_ops.init) {
 		ret = kvm_iommu_ops.init();
 		if (ret)
diff --git a/arch/arm64/kvm/hyp/nvhe/timer-sr.c b/arch/arm64/kvm/hyp/nvhe/timer-sr.c
index 9072e71693ba..8b68ffd86050 100644
--- a/arch/arm64/kvm/hyp/nvhe/timer-sr.c
+++ b/arch/arm64/kvm/hyp/nvhe/timer-sr.c
@@ -9,6 +9,9 @@
 #include <linux/kvm_host.h>
 
 #include <asm/kvm_hyp.h>
+#include <asm/kvm_pkvm.h>
+
+static u32 timer_rate;
 
 void __kvm_timer_set_cntvoff(u64 cntvoff)
 {
@@ -46,3 +49,30 @@ void __timer_enable_traps(struct kvm_vcpu *vcpu)
 	val |= CNTHCTL_EL1PCTEN;
 	write_sysreg(val, cnthctl_el2);
 }
+
+static inline u64 pkvm_ticks_get(void)
+{
+	return __arch_counter_get_cntvct();
+}
+
+int pkvm_timer_init(void)
+{
+	timer_rate = read_sysreg(cntfrq_el0);
+	/* TODO: may be declared in DT instead */
+	if (!timer_rate)
+		return -ENODEV;
+	return 0;
+}
+
+/* For timer_rate > 100000 */
+#define pkvm_time_us_to_ticks(us) ((u64)(us) * timer_rate / 1000000)
+
+void pkvm_udelay(unsigned long usecs)
+{
+	u64 ticks = pkvm_time_us_to_ticks(usecs);
+	u64 start = pkvm_ticks_get();
+
+	while ((pkvm_ticks_get() - start) < ticks)
+		/* TODO wfe */
+		cpu_relax();
+}
-- 
2.34.1

