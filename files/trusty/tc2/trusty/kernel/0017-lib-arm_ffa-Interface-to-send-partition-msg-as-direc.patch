From 8136587475eefecad4b2ccd69cdaa0955cfc59c2 Mon Sep 17 00:00:00 2001
From: Ben Horgan <ben.horgan@arm.com>
Date: Tue, 5 Oct 2021 13:39:32 +0000
Subject: [PATCH 17/22] [lib][arm_ffa] Interface to send partition msg as
 direct response

Signed-off-by: Ben Horgan <ben.horgan@arm.com>
Change-Id: I92be663b9101fd174dc4d2cb55b047b0f967f692
Upstream-Status: Pending [Not submitted to upstream yet]
---
 lib/arm_ffa/ffa.c                     | 48 +++++++++++++++++++++++++++
 lib/arm_ffa/include/lib/arm_ffa/ffa.h |  2 ++
 2 files changed, 50 insertions(+)

diff --git a/lib/arm_ffa/ffa.c b/lib/arm_ffa/ffa.c
index a4b7298..e9c01d6 100644
--- a/lib/arm_ffa/ffa.c
+++ b/lib/arm_ffa/ffa.c
@@ -402,6 +402,45 @@ void ffa_call_error(enum ffa_error err) {
     arch_interrupt_restore(irq_fiq_state, SPIN_LOCK_FLAG_IRQ_FIQ);
 }
 
+static status_t ffa_call_msg_send_direct_resp(bool use_64_bit_call,
+                                              uint16_t dest_id,
+                                              bool is_framework_msg,
+                                              uint8_t framework_msg_type,
+                                              uint64_t args[static 5]) {
+    struct smc_ret8 smc_ret;
+    spin_lock_saved_state_t irq_fiq_state;
+
+    DEBUG_ASSERT(args);
+
+    arch_interrupt_save(&irq_fiq_state, SPIN_LOCK_FLAG_IRQ_FIQ);
+    smc_ret = smc8(use_64_bit_call ?
+                   SMC_FC64_FFA_MSG_SEND_DIRECT_RESP :
+                   SMC_FC_FFA_MSG_SEND_DIRECT_RESP,
+                   (uint32_t) dest_id | ((uint32_t) ffa_local_id << 16),
+                   is_framework_msg ? (1 << 31) | framework_msg_type : 0,
+                   args[0], args[1], args[2], args[3], args[4]);
+    ffa_incall_set(&smc_ret);
+    arch_interrupt_restore(irq_fiq_state, SPIN_LOCK_FLAG_IRQ_FIQ);
+
+    switch (smc_ret.r0) {
+    case SMC_FC_FFA_ERROR:
+        switch ((int)smc_ret.r2) {
+        case FFA_ERROR_NOT_SUPPORTED:
+            return ERR_NOT_SUPPORTED;
+        case FFA_ERROR_INVALID_PARAMETERS:
+            return ERR_INVALID_ARGS;
+        case FFA_ERROR_DENIED:
+            return ERR_BAD_STATE;
+        case FFA_ERROR_ABORTED:
+            return ERR_CANCELLED;
+        default:
+            return ERR_NOT_VALID;
+        }
+    default:
+        return NO_ERROR;
+    }
+}
+
 status_t ffa_call_msg_wait(void) {
     struct smc_ret8 smc_ret;
     spin_lock_saved_state_t irq_fiq_state;
@@ -803,6 +842,15 @@ status_t ffa_mem_relinquish(uint64_t handle) {
     return res;
 }
 
+status_t ffa_msg_send_direct_resp_partition(struct ffa_msg_partition *msg) {
+    uint64_t args[5];
+
+    for (int i=0; i<5; i++) {
+        args[i] = msg->args[i];
+    }
+    return ffa_call_msg_send_direct_resp(false, msg->remote_id, false, 0, args);
+}
+
 static status_t ffa_setup(void) {
     status_t res;
     uint16_t ver_major_ret;
diff --git a/lib/arm_ffa/include/lib/arm_ffa/ffa.h b/lib/arm_ffa/include/lib/arm_ffa/ffa.h
index 8c547e0..eabf477 100644
--- a/lib/arm_ffa/include/lib/arm_ffa/ffa.h
+++ b/lib/arm_ffa/include/lib/arm_ffa/ffa.h
@@ -95,3 +95,5 @@ struct ffa_incall *ffa_incall_get(void);
 
 /* Messaging interfaces */
 status_t ffa_call_msg_wait(void);
+/* Send a 32-bit partition message as a direct message response */
+status_t ffa_msg_send_direct_resp_partition(struct ffa_msg_partition *msg);
-- 
2.17.1

