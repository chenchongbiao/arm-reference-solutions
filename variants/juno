# Copyright (c) 2015, ARM Limited and Contributors. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# Neither the name of ARM nor the names of its contributors may be used
# to endorse or promote products derived from this software without specific
# prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

VARIANT_DESC="Juno kernel for BusyBox Software Stack"

# Absolute path to the aarch64 GCC compoiler binaries (plus prefix)
# If you wish to specify a path relative to the workspace root, prefix it with "$TOP_DIR/"
# If your compiler is on your path, you can simply add the prefix, as per the default example.
export CROSS_COMPILE=${TOP_DIR}/tools/gcc/gcc-linaro-4.9-2015.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-
export CROSS_COMPILE_32=${TOP_DIR}/tools/gcc/gcc-linaro-4.9-2015.05-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
BUILD_SCRIPTS=""

LINUX_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-linux.sh "
LINUX_PATH=linux
LINUX_ARCH=arm64
LINUX_CONFIG_LIST="defconfig mobile_bb mobile_oe android"
LINUX_CONFIG_DEFAULT=mobile_bb
declare -A LINUX_defconfig
LINUX_defconfig[path]="linux"
LINUX_defconfig[config]=""
LINUX_defconfig[defconfig]=defconfig
declare -A LINUX_mobile_bb
LINUX_mobile_bb[path]="linux"
LINUX_mobile_bb[config]="linaro-base vexpress64 big-LITTLE-MP"
declare -A LINUX_mobile_oe
LINUX_mobile_oe[path]="linux"
LINUX_mobile_oe[config]="linaro-base big-LITTLE-MP distribution vexpress64"
declare -A LINUX_android
LINUX_android[path]="linux"
LINUX_android[config]="linaro-base big-LITTLE-MP android vexpress64"

UBOOT_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-uboot.sh "
UBOOT_PATH=u-boot
UBOOT_ARCH=aarch64
UBOOT_MKIMG=${TOP_DIR}/${UBOOT_PATH}/output/tools/mkimage
UBOOT_UIMAGE_ADDRS="0x80080000"
UBOOT_BOARDS="vexpress_aemv8a_juno"
declare -A UBOOT_OUTPUT_DESTS
UBOOT_OUTPUT_DESTS[vexpress_aemv8a_juno]=juno

UEFI_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-uefi.sh "
UEFI_PATH=uefi/edk2
UEFI_BUILD_MODE=DEBUG
UEFI_TOOLCHAIN=GCC49
UEFI_TOOLS_PATH=tools/uefi-tools
UEFI_ACPICA_PATH=tools/acpica/generate/unix
UEFI_PLATFORMS="juno"
declare -A UEFI_PLAT_juno
UEFI_PLAT_juno[platname]="ArmJuno"
UEFI_PLAT_juno[output]=juno
UEFI_PLAT_juno[defines]=
UEFI_PLAT_juno[binary]="BL33_AP_UEFI.fd"

SCP_BUILD_ENABLED=0
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-scp.sh "
SCP_PATH=scp
#SCP_ARM_COMPILER_PATH=/usr/local/DS-5_v5.21.0/sw/ARMCompiler5.05u1/bin
#SCP_ARM_COMPILER_PATH=/arm/tools/arm/ds-5/5.21.0/sw/ARMCompiler5.05u1/bin/
SCP_GCC_COMPILER_PREFIX=${TOP_DIR}/tools/gcc/gcc-arm-none-eabi-4_9-2015q3/bin/arm-none-eabi-
SCP_PLATFORMS="juno_SILICON"
SCP_PREBUILT_ROMFW_BYPASS_juno_SILICON=${TOP_DIR}/recovery/SOFTWARE/bl0.bin
SCP_PREBUILT_RAMFW_juno_SILICON=${TOP_DIR}/recovery/SOFTWARE/bl30.bin
#Build SCP in release mode, or Juno may have boot issues in the kernel
#(timeouts are not handled gracefully at the moment)
SCP_BUILD_MODE=release
declare -A SCP_BYPASS_ROM_SUPPORT
SCP_BYPASS_ROM_SUPPORT[juno]=true

ARM_TF_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-arm-tf.sh "
ARM_TF_PATH=arm-tf
ARM_TF_PLATS="juno"
ARM_TF_DEBUG_ENABLED=${ARM_TF_DEBUG_ENABLED:-1}

# TBBR related definitions, used when TBBR is enabled in TARGET_$plat array at the bottom
# of this file
ARM_TF_ROT_KEY=$TOP_DIR/$ARM_TF_PATH/plat/arm/board/common/rotpk/arm_rotprivk_rsa.pem
ARM_TF_MBEDTLS_DIR=$TOP_DIR/mbedtls
ARM_TF_TBBR_BUILD_FLAGS="TRUSTED_BOARD_BOOT=1 GENERATE_COT=1 CREATE_KEYS=1 ARM_ROTPK_LOCATION=devel_rsa ROT_KEY=${ARM_TF_ROT_KEY} MBEDTLS_DIR=${ARM_TF_MBEDTLS_DIR}"
declare -A TBBR_juno
TBBR_juno[tbbr]=1

# OPTEE build setup
# OPTEE OS
OPTEE_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-optee-os.sh "
# set trusted firmware to use dram for TEE
OPTEE_RAM_LOCATION=dram
OPTEE_ARCH="aarch32"
OPTEE_PLATS="juno"
OPTEE_OS_CROSS_COMPILE=${CROSS_COMPILE_32}
OPTEE_CLIENT_CROSS_COMPILE=${CROSS_COMPILE}
OPTEE_OS_PATH=optee/optee_os
OPTEE_CORE_LOG_LEVEL=4
OPTEE_OS_BIN_NAME="tee.bin"
declare -A OPTEE_juno
OPTEE_juno[optee]=1
OPTEE_juno[plat]="vexpress"
OPTEE_juno[flavor]="juno"

BUSYBOX_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-busybox.sh "
BUSYBOX_PATH=busybox
BUSYBOX_ARCH=arm
BUSYBOX_RAMDISK_PATH=ramdisk
BUSYBOX_RAMDISK_BUSYBOX_PATH=$BUSYBOX_PATH/_install/bin/busybox

ANDROID_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-android.sh "
ANDROID_SOURCE_PATH=source-build-disabled
ANDROID_BINARIES_PATH=prebuilts/android
ANDROID_BINS_VARIANTS="juno"

OE_BINARIES_BUILD_ENABLED=0
OE_RAMDISK_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-oe-binaries.sh "
OE_BINARIES_PATH=prebuilts/oe
# this must be the last step for low level code.
TARGET_BINS_BUILD_ENABLED=1
BUILD_SCRIPTS=$BUILD_SCRIPTS"build-target-bins.sh "
FINAL_BUILD_STEP="build-target-bins.sh"
TARGET_BINS_HAS_ANDROID=1
TARGET_BINS_HAS_OE=1

TARGET_BINS_PLATS="juno"
declare -A TARGET_juno
TARGET_juno[arm-tf]="juno"
TARGET_juno[scp]="juno_SILICON"
TARGET_juno[uboot]="juno"
TARGET_juno[uefi]="juno"
TARGET_juno[fdts]="juno juno-r1 juno-r2"
TARGET_juno[linux]="Image uImage.0x80080000"
TARGET_juno[ramdisk]=0x84000000
TARGET_juno[tbbr]=1
TARGET_juno[optee]=1
