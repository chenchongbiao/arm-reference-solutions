# TC2-specific configuration

source $SCRIPT_DIR/config/common.config

# SCP
FW_TARGETS="scp"
FW_INSTALL="romfw ramfw"
SCP_PLATFORM="tc2"

# Kernel
declare -A LINUX_defconfig
LINUX_defconfig[path]="linux"
LINUX_defconfig[config]="base.cfg dhcp.cfg devtmpfs.cfg gralloc.cfg mali.cfg rtc.cfg ffa.cfg optee.cfg virtio.cfg autofdo.cfg ci700.cfg trusty.cfg disable_mpam.cfg pkvm.cfg mpam.cfg fpga.cfg"

source $SCRIPT_DIR/config/debian_ddk.config

# TF-A
TFA_PLATFORM=tc
TC_VERSION=2
TC_FWU_SUPPORT=1
TFA_DEBUG=1
# Log levels are LOG_LEVEL_NONE, LOG_LEVEL_ERROR, LOG_LEVEL_NOTICE, LOG_LEVEL_WARNING,LOG_LEVEL_INFO, LOG_LEVEL_VERBOSE
TFA_LOG_LEVEL=LOG_LEVEL_NOTICE
make_opts_tfa=(
        PLAT=$TFA_PLATFORM
        TARGET_VERSION=$TC_VERSION
        TARGET_PLATFORM=$TC_TARGET_FLAVOR
        ARCH=aarch64
        BL33=$OUTPUT_DIR/tmp_build/u-boot/u-boot.bin
        BL32=$OUTPUT_DIR/tmp_build/hafnium/secure_tc_clang/hafnium.bin
        SCP_BL2="$SCP_OUTDIR/scp/bin/tc2-bl2.bin"
        MBEDTLS_DIR="$SRC_DIR/mbedtls"
        SPD=spmd
        SPMD_SPM_AT_SEL2=1
        CTX_INCLUDE_EL2_REGS=1
        LD_LIBRARY_PATH=$TFA_OPENSSL_DIR/lib:$LD_LIBRARY_PATH
        CROSS_COMPILE=$TFA_COMPILER-
        TRUSTED_BOARD_BOOT=1
        GENERATE_COT=1
        ARM_ROTPK_LOCATION=devel_rsa
        ROT_KEY="$TFA_SRC/plat/arm/board/common/rotpk/arm_rotprivk_rsa.pem"
        DEBUG=$TFA_DEBUG
        LOG_LEVEL=$TFA_LOG_LEVEL
        ARM_ARCH_MINOR=6
        HOSTCC=gcc
        CTX_INCLUDE_PAUTH_REGS=1
        BRANCH_PROTECTION=1
        ENABLE_SVE_FOR_NS=1
        ENABLE_SVE_FOR_SWD=1
        ENABLE_MPAM_FOR_LOWER_ELS=1
        CTX_INCLUDE_MTE_REGS=1
        OPENSSL_DIR=$TFA_OPENSSL_DIR

)

# TF-A for OP-TEE
make_opts_tfa_optee=(
        ARM_SPMC_MANIFEST_DTS="$TFA_SRC/plat/arm/board/tc/fdts/tc_spmc_optee_sp_manifest.dts"
        SP_LAYOUT_FILE="$TFA_SP_DIR/sp_layout.json"
        ARM_GPT_SUPPORT=$TC_FWU_SUPPORT
        PSA_FWU_SUPPORT=$TC_FWU_SUPPORT
        TS_SP_FW_CONFIG=1
        BUILD_BASE="${TFA_OUTDIR}/build/"
)

# TF-A for Trusty
make_opts_tfa_trusty=(
        ARM_SPMC_MANIFEST_DTS="$TFA_SRC/plat/arm/board/tc/fdts/tc_spmc_trusty_sp_manifest.dts"
        SP_LAYOUT_FILE="$TRUSTY_SP_DIR/sp_layout_trusty.json"
        ARM_GPT_SUPPORT=0
        PSA_FWU_SUPPORT=0
        BUILD_BASE="${TRUSTY_OUTDIR}/build/"
)

# TF-A for Fpga
make_opts_fpga=(
        PLAT=$TFA_PLATFORM
        TARGET_VERSION=$TC_VERSION
        TARGET_PLATFORM=$TC_TARGET_FLAVOR
        ARCH=aarch64
        BL33=$OUTPUT_DIR/tmp_build/u-boot/u-boot.bin
        SCP_BL2="$SCP_OUTDIR/scp/bin/tc2-bl2.bin"
        MBEDTLS_DIR="$SRC_DIR/mbedtls"
        LD_LIBRARY_PATH=$TFA_OPENSSL_DIR/lib:$LD_LIBRARY_PATH
        CROSS_COMPILE=$TFA_COMPILER-
        ARM_GPT_SUPPORT=0
        DEBUG=$TFA_DEBUG
        LOG_LEVEL=$TFA_LOG_LEVEL
        ARM_ARCH_MINOR=6
        HOSTCC=gcc
        BRANCH_PROTECTION=0
        ENABLE_SVE_FOR_NS=1
        ENABLE_SVE_FOR_SWD=1
        ENABLE_MPAM_FOR_LOWER_ELS=1
        CTX_INCLUDE_MTE_REGS=1
        OPENSSL_DIR=$TFA_OPENSSL_DIR
        BUILD_BASE="${TFA_OUTDIR}/build/"
)

# RSS
RSS_OUTDIR="${OUTPUT_DIR}/tmp_build/rss/"
RSS_BINDIR="${RSS_OUTDIR}/build/bin"
RSS_SRC="${SRC_DIR}/rss"
RSS_BUILD_TYPE="Release"
RSS_PLATFORM="arm/rss/tc"
RSS_TOOLCHAIN_FILE="${RSS_SRC}/toolchain_GNUARM.cmake"
# If TOOLCHAIN is GNUARM, set RSS_COMPILER with gcc path.
# If TOOLCHAIN is ARMCLANG, RSS_COMPILER is not used. Add armclang to the path as mentioned in TF-M documentation - https://tf-m-user-guide.trustedfirmware.org/getting_started/tfm_getting_started.html
RSS_COMPILER=$ARM_BARE_METAL/arm-none-eabi
RSS_IMAGE_NUMBER=4
RSS_LAYOUT_WRAPPER_VERSION="1.5.0"
RSS_SIGN_PRIVATE_KEY="${RSS_SRC}/bl2/ext/mcuboot/root-RSA-3072.pem"
# MCUBoot header size must match the HOST_IMAGE_HEADER_SIZE in RSS source code
RSS_IMAGE_OFFSET="0x2000"
RSS_SEC_CNTR_INIT_VAL=1
RSS_SIGN_SCP_BL1_NAME="scp_romfw.bin"
RSS_SIGN_SCP_BL1_LOAD_ADDRESS="0x71000000"
RSS_SIGN_SCP_BL1_BIN_SIZE="0x10000"
RSS_SIGN_AP_BL1_NAME_BUILDROOT="bl1-tc.bin"
RSS_SIGN_AP_BL1_NAME_ANDROID="bl1-trusty-tc.bin"
RSS_SIGN_AP_BL1_LOAD_ADDRESS="0x70000000"
RSS_SIGN_AP_BL1_BIN_SIZE="0x20000"
RSS_GPT_SUPPORT=$TC_FWU_SUPPORT

# RSS-TRUSTY
RSS_OUTDIR_TRUSTY="${OUTPUT_DIR}/tmp_build/rss_trusty/"
RSS_BINDIR_TRUSTY="${RSS_OUTDIR_TRUSTY}/build/bin"
RSS_GPT_SUPPORT_TRUSTY=0

# U-Boot
PLATFORM_CFG="total_compute_defconfig"
EXTRA_CFG="common.cfg"

# Optee
OPTEE_PLATFORM="totalcompute-tc2"
make_opts_optee=(
        CROSS_COMPILE_core=$OPTEE_COMPILER-
        CROSS_COMPILE_ta_arm64=$OPTEE_COMPILER-
        PLATFORM=$OPTEE_PLATFORM
        CFG_USER_TA_TARGETS=ta_arm64
        CFG_ARM64_core=y
        CFG_TEE_CORE_LOG_LEVEL=3
        CFG_TEE_BENCHMARK=n
        CFG_WITH_STATS=y
        CFG_CORE_SEL2_SPMC=y
        CFG_TZDRAM_START=0xfd284000
        CFG_TZDRAM_SIZE=0x0197c000
        CFG_SHMEM_START=0xf8e00000
        CFG_SHMEM_SIZE=0x00200000
        O=$OPTEE_OUT
)
