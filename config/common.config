#Generic stuff
FILES_DIR=$SCRIPT_DIR/files
TOOLS_DIR=$SCRIPT_DIR/../tools
SRC_DIR=${SCRIPT_DIR}/../src
OUTPUT_DIR="${SCRIPT_DIR}/../output/${FILESYSTEM}"
DEPLOY_DIR=${OUTPUT_DIR}/deploy
VENV_DIR=$SCRIPT_DIR/../tc-venv

# Toolchains
# Use whatever version was downloaded by setup.sh
ARM_BARE_METAL=$(find $TOOLS_DIR -type d -name "gcc-arm-*-x86_64-arm-none-eabi")"/bin"
AARCH64_LINUX=$(find $TOOLS_DIR -type d -name "gcc-arm-*-x86_64-aarch64-none-linux-gnu")"/bin"
AARCH64_BARE_METAL=$(find $TOOLS_DIR -type d -name "gcc-arm-*-x86_64-aarch64-none-elf")"/bin"

# Tools
CMAKE=${TOOLS_DIR}/cmake-3.22.4-linux-x86_64/bin/cmake

# SCP
SCP_OUTDIR=$OUTPUT_DIR/tmp_build/scp/
SCP_SRC=$SRC_DIR/SCP-firmware
SCP_LOG_LEVEL="WARN"
SCP_BUILD_RELEASE=1
SCP_COMPILER=$ARM_BARE_METAL/arm-none-eabi
SCP_BUILD_MODE="release"

# Kernel
LINUX_SRC=$SRC_DIR/linux
LINUX_OUTDIR="$OUTPUT_DIR/tmp_build/linux/"
LINUX_COMPILER=$AARCH64_LINUX/aarch64-none-linux-gnu
LINUX_IMAGE_TYPE="Image"

# Arm FFA User
ARM_FFA_TEE_SRC=$SRC_DIR/arm-ffa-tee
ARM_FFA_TEE_OUTDIR=$OUTPUT_DIR/tmp_build/arm-ffa-tee

#Trusted-Firmware A
TFA_COMPILER=$AARCH64_BARE_METAL/aarch64-none-elf
TFA_SRC=$SRC_DIR/trusted-firmware-a
TFA_OUTDIR=$OUTPUT_DIR/tmp_build/tfa
TFA_FILES=$FILES_DIR/tfa
TFA_OPENSSL_DIR=$TOOLS_DIR/openssl
TFA_SP_DIR=$OUTPUT_DIR/tmp_build/tfa_sp

# U-Boot
UBOOT_SRC=$SRC_DIR/u-boot
UBOOT_OUTDIR=$OUTPUT_DIR/tmp_build/u-boot
UBOOT_COMPILER=$AARCH64_LINUX/aarch64-none-linux-gnu

# Trusted Services
TS_SRC=$SRC_DIR/trusted-services
SHIM_SRC=$SRC_DIR/sel1_shim
TS_OUTDIR=$OUTPUT_DIR/tmp_build/trusted-services
TS_COMPILER=$AARCH64_BARE_METAL/aarch64-none-elf
TS_APPS_COMPILER=$AARCH64_LINUX/aarch64-none-linux-gnu
TS_ENVIRONMENT="sp"
SECURE_PARTITIONS="crypto internal-trusted-storage firmware-update"
TS_TEST_APPS="ts-demo ts-service-test"

# Optee-OS
OPTEE_SRC=$SRC_DIR/optee_os
OPTEE_OUT=$OUTPUT_DIR/tmp_build/optee-os/
OPTEE_COMPILER=$AARCH64_LINUX/aarch64-none-linux-gnu

# Optee Test
OPTEE_TEST_SRC=$SRC_DIR/optee_test
OPTEE_TEST_OUT=$OUTPUT_DIR/tmp_build/optee-test

# Optee Client
OPTEE_CLIENT_SRC=$SRC_DIR/optee_client
OPTEE_CLIENT_OUT=$OUTPUT_DIR/tmp_build/optee-client

# Hafnium
HAFNIUM_SRC=$SRC_DIR/hafnium
HAFNIUM_OUTDIR=$OUTPUT_DIR/tmp_build/hafnium

# Buildroot
BUILDROOT_SRC=$SRC_DIR/buildroot
BUILDROOT_OUT=$OUTPUT_DIR/tmp_build/buildroot
BUILDROOT_CFG=$FILES_DIR/buildroot
BUILDROOT_ROOTFS_OVERLAY=$BUILDROOT_SRC/board/arm/total-compute/rootfs-overlay

# Kernel selftest
KSELFTEST_SRC=$LINUX_SRC/tools/testing/selftests
KSELFTEST_LIST="mte bti pauth"
KSELFTEST_ROOTFS_OVERLAY=$BUILDROOT_ROOTFS_OVERLAY/usr/bin

# Android
ANDROID_SRC=$SRC_DIR/android
ANDROID_OUT=$OUTPUT_DIR/tmp_build/android

# MALI
GPU_DDK_REPO=$GPU_DDK_REPO
GPU_DDK_VERSION=$GPU_DDK_VERSION
LM_LICENSE_FILE=$LM_LICENSE_FILE
ARM_PRODUCT_DEF=$SCRIPT_DIR/../tools/armclang/sw/mappings/platinum.elmap
ARMLMD_LICENSE_FILE=$ARMLMD_LICENSE_FILE
ARMCLANG_TOOL=$ARMCLANG_TOOL

# Trusty
TRUSTY_SRC=$SRC_DIR/trusty
TRUSTY_OUTDIR=$OUTPUT_DIR/tmp_builds/trusty
TRUSTY_ENV=$TRUSTY_SRC/trusty/vendor/google/aosp/scripts
TRUSTY_SP_DIR=$OUTPUT_DIR/tmp_build/trusty_sp
TRUSTY_FILES=$FILES_DIR/trusty
TRUSTY_LK_FILES=external/lk
TRUSTY_DEV_FILES=trusty/device/arm/generic-arm64
TRUSTY_KERNEL_FILES=trusty/kernel
TRUSTY_BASE_FILES=trusty/user/base
TRUSTY_APP_SAMPLE_FILES=trusty/user/app/sample
TRUSTY_APP_STORAGE_FILES=trusty/user/app/storage
TRUSTY_OUTDIR=$OUTPUT_DIR/tmp_build/trusty
TRUSTY_BIN=$TRUSTY_SRC/build-root/build-tc-test-debug

#Docker
DOCKER_REGISTRY="registry.gitlab.arm.com/arm-reference-solutions/build-scripts"
DOCKER_IMAGE="tc_image"
TAG=20.04 #Ubuntu version

# ML configuration
source "${SCRIPT_DIR}/config/ml.config"
